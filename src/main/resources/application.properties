spring.application.name=open-responses
spring.jackson.generator.write-bigdecimal-as-plain=true

# Logging configuration
logging.level.root=INFO
logging.level.ai.masaic.openresponses=INFO
logging.level.ai.masaic.openresponses.api.controller=INFO
logging.level.ai.masaic.openresponses.api.client=INFO
logging.level.ai.masaic.openresponses.tool=INFO
logging.level.org.springframework.web=INFO
logging.level.io.opentelemetry.sdk.metrics.SdkMeter=ERROR

management.endpoints.web.exposure.include=health,info,metrics
management.observations.enable.http.server.requests=true
management.observations.enable.http.client.requests=false
#management.tracing.propagation.type=b3

############# Open Telemetry #############
otel.instrumentation.spring-webflux.enabled=false
otel.instrumentation.http.server.emit-experimental-telemetry=false
otel.instrumentation.micrometer.enabled=true
##### OTEL env variables #######
#Ref: https://opentelemetry.io/docs/specs/otel/configuration/sdk-environment-variables/
otel.exporter.otlp.endpoint=http://localhost:4318
otel.exporter.otlp.protocol=http/protobuf
otel.sdk.disabled=true
otel.service.name=${spring.application.name}
#################################################

# API request timeout
api.request.timeout=30
# Server configuration
server.port=8080
server.shutdown=graceful
spring.lifecycle.timeout-per-shutdown-phase=20s

# Thread pool configuration
open-responses.thread-pool.core-size=20
open-responses.thread-pool.max-size=100
open-responses.thread-pool.queue-capacity=200
open-responses.thread-pool.keep-alive-seconds=60

# Connection pool configuration
open-responses.connection-pool.max-connections=500
open-responses.connection-pool.max-idle-time=30
open-responses.connection-pool.max-life-time=60

# HTTP client configuration
open-responses.http-client.connect-timeout=5
open-responses.http-client.read-timeout=60
open-responses.http-client.write-timeout=60

# Response store configuration (in-memory or mongodb)
open-responses.store.type=mongodb
# MongoDB configuration
open-responses.mongodb.uri=mongodb://localhost:27017/openresponses
open-responses.mongodb.database=test-openresponses

# To enable or disable MCP tools
open-responses.tools.mcp.enabled=false


# WebFlux codec configuration for large file uploads
spring.codec.max-in-memory-size=100MB
spring.webflux.multipart.max-in-memory-size=10MB
spring.webflux.multipart.max-disk-usage-per-part=500MB
spring.webflux.multipart.max-headers-size=20KB

# File storage configuration
open-responses.file-storage.type=local
open-responses.file-storage.local.root-dir=${user.home}/open-responses-files

# Vector store repository configuration
open-responses.store.vector.repository.type=file

# Vector store configuration
open-responses.store.vector.search.provider=file
open-responses.store.vector.search.chunk-size=1000
open-responses.store.vector.search.chunk-overlap=200
open-responses.store.vector.search.cleanup.enabled=true
open-responses.store.vector.search.cleanup.cron=0 0 * * * ?



#open-responses.embeddings.modelType=onnx
#open-responses.embeddings.onnxModelPath=
#open-responses.embeddings.tokenizerPath=


open-responses.store.vector.search.vectorDimension=1536
